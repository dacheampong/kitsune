# -*- coding: utf-8 -*-

import os
import subprocess
from setuptools import setup, find_packages

# Fetch version from git describe and write it to version.py
version_py = os.path.join(os.path.dirname(__file__), "ksiga", "version.py")

try:
    version_git = subprocess.check_output(["git", "describe", "--tags"]).rstrip()
    version_git = version_git.decode("utf-8")
except:
    with open(version_py, "r") as fh:
        version_git = open(version_py).read().strip().split("=")[-1].replace('"', '')

version_msg = "# Do not edit this file, pipeline versioning is governed by git tags"
with open(version_py, "w") as fh:
    fh.write(version_msg + os.linesep + "version=" + '"' + version_git + '"')

SETUPARG = {
        'name':'ksiga',
        'version':"{ver}".format(ver=version_git),
        'description': 'tools for finding an optimal kmer',
        'url':'',
        'packages': find_packages(exclude=["bin", "build", "data", "dist", "ksig.egg-info",
            "logs", "results", "scripts", "tests"]),
        'author': 'Preecha Patumcharoenpol',
        'author_email': 'yumyai@gmail.com',
        'license': "Apache 2.0",
        'scripts': ["bin/ksiga"],
        'setup_requires': ['pytest-runner'],
        'tests_require': ['pytest'],
        'install_requires': ["numpy >= 1.1.0",
                             "scipy>=0.19.1",
                             "biopython>=1.68",
                             "scikit-learn>=0.19.1",
                             "h5py==2.6.0",
                             "joblib"
                             ],
        'dependency_links':[
            "git+https://github.com/scikit-learn/scikit-learn.git/@d551227d97382f42cc7119d89573b66b386bb344#egg=scikit-learn"
        ],
        'extras_require': {
            'test': ['pytest', 'pytest-cov']
            }
        }

setup(**SETUPARG)
